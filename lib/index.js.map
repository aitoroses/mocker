{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAGO,MAAM;QACN,WAAW;QACX,KAAK;QACL,MAAM;QACN,QAAQ;QACR,SAAS;QACT,KAAK;QACL,MAAM;QACN,MAAM;QACN,OAAO;QACP,IAAI;QACJ,KAAK;AAOL,IAAM,QAAQ,WAAR,QAAQ,GAAG,YAFhB,QAAQ,CAEiB,gBAAgB,CAAC,sCAGjD,CAAC,CAAA;;AAEK,IAAM,MAAM,WAAN,MAAM,GAAG,QAAQ,CAAC,GAAG,kBAAQ,CAAA","file":"index.js","sourcesContent":["// Import Reflect Polyfill\nimport 'reflect-metadata'\n\nexport Plugin from './types/Plugin'\nexport incremental from './types/Incremental'\nexport faker from './types/Faker'\nexport chance from './types/Chance'\nexport computed from './types/Computed'\nexport condition from './types/Condition'\nexport value from './types/Value'\nexport values from './types/Values'\nexport hasOne from './types/HasOne'\nexport hasMany from './types/HasMany'\nexport noop from './types/noop'\nexport array from './types/Array'\n\nimport Mocker from './Mocker'\nimport Database from './Database'\n\nimport {Injector} from 'angular2-di'\n\nexport const injector = Injector.resolveAndCreate([\n  Mocker,\n  Database\n])\n\nexport const mocker = injector.get(Mocker)\n"]}