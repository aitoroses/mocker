{"version":3,"sources":["../../src/__test__/models.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2Ca;;;OAIX,aAAa,aAAM,gBAAN;OACb,YAAY,aAAM,eAAN;OACZ,OAAO,gBAAS,YAAW;AAAC,WAAO,CAAC,KAAK,SAAL,CAAe,KAAf,CAAqB,CAArB,EAAuB,CAAvB,IAA4B,KAAK,UAAL,CAAgB,KAAhB,CAAsB,CAAtB,EAAwB,CAAxB,CAA5B,GAAyD,GAAzD,CAAD,CAA+D,WAA/D,EAAP,CAAD;GAAX;OAEhB,aAAa;AACX,gBAAY,cAAO,SAAP,CAAZ;AACA,iBAAa,eAAQ,uBAAR,CAAb;AACA,WAAO,aAAM,CAAN,CAAP;AACA,YAAQ,gBAAS,YAAW;AAAC,aAAO,KAAK,IAAL,CAAR;KAAX,CAAjB;AACA,WAAO,YAAO;AACZ,UAAI,KAAK,CAAL,CADQ;AAEZ,aAAO;AACL,4BAAM;AAAE,oCAAwB,IAAxB,CAAF;SADD;OAAP,CAFY;KAAN,EAAR;AAMA,mBAAe,aAAM,CAAN,CAAf;AACA,gBAAY,oBAAZ;;OAGF,WAAW;AACT,SAAK,gBAAS,YAAW;AAAC,aAAO,KAAK,IAAL,CAAR;KAAX,CAAd;AACA,iBAAa,gBAAS,YAAW;AAAC,aAAO,KAAK,UAAL,GAAkB,GAAlB,GAAyB,KAAK,SAAL,CAAjC;KAAX,CAAtB;AACA,cAAU,gBAAS,YAAW;AAAC,aAAO,KAAK,SAAL,CAAR;KAAX,CAAnB;AACA,UAAM,aAAM,gBAAN,CAAN;AACA,eAAW,aAAM,mBAAN,CAAX;;OAEF,KAAK;AACH,wBAAM;AACJ,aAAO,CAAC,CACN,YADM,EAEN,cAFM,EAGN,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,CAAhB,CAHL,CAAD,CAAP,CADI;KADH;;;;;SA7BE,WAAW,CAAC,YAAD,EAAe,WAAf,EAA4B,MAA5B","file":"models.js","sourcesContent":["import {\n  incremental,\n  faker,\n  chance,\n  casual,\n  randexp,\n  computed,\n  condition,\n  value,\n  hasOne,\n  hasMany,\n  array\n} from '..'\n\n// export class User {\n//   static virtuals = [\"computedVirtual\"];\n//\n//   _id = incremental('user');\n//   computedVirtual = computed(() => \"computedVirtual\");\n//   computed1 = computed(db =>  \"myComputedProp1\");\n//   condition_1 = condition(() => false, value(1));\n//   condition_2 = condition(() => true, value(1));\n//   condition_3 = condition(() => true, faker('internet.email'));\n//   uid = faker('internet.email');\n//   name = value(\"foo\");\n//   thing = {\n//     foo: value(\"bar\")\n//   };\n// }\n//\n// export class Request {\n//   static virtuals = [\"user\"];\n//\n//   _id = incremental('request');\n//   userCollection = hasMany(User, 2);\n//   user = hasOne(User);\n//   creator = computed(function(db) { return this.user.name});\n//   creator = array(computed(function(db) { return this.user.name}), 10);\n//   creator2 = array(computed(function(db) { return this.user.name}), 10, true);\n//   emails = array(faker('internet.email'), 2);\n//   number = chance('integer');\n// }\n\nexport class User {\n  static virtuals = [\"_firstName\", \"_lastName\", \"_uid\"];\n\n  // virtual field\n  _firstName = faker('name.firstName');\n  _lastName = faker('name.lastName');\n  _uid = computed(function() {return (this._lastName.slice(0,5) + this._firstName.slice(0,2) + \"1\").toLowerCase()});\n\n  properties = {\n    testCasual: casual('country'),\n    testRandExp: randexp(/hello+ (world|to you)/),\n    value: value(1),\n    userId: computed(function() {return this._uid}),\n    label: (() => {\n      let id = 0\n      return {\n        run() { return `EAPP_PROPERTY_${id++}` }\n      }\n    })(),\n    applicationId: value(2),\n    propertyId: incremental()\n  };\n\n  userData = {\n    uid: computed(function() {return this._uid}),\n    displayName: computed(function() {return this._firstName + ' ' +  this._lastName}),\n    lastName: computed(function() {return this._lastName}),\n    mail: faker('internet.email'),\n    telephone: faker(\"phone.phoneNumber\")\n  };\n  ou = {\n    run() {\n      return [[\n        \"AUSTRIA_PH\",\n        \"CHINA_MAXIMA\"\n      ][Math.round(Math.random() * 2)]]\n    }\n  };\n}\n"]}