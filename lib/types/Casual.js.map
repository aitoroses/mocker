{"version":3,"sources":["../../src/types/Casual.js"],"names":[],"mappings":";;;;;;;;;kBAuBwB;;;;;;;;;;;;;;;;;;;;;;;IAjBX;;;AAEX,WAFW,MAEX,CAAY,SAAZ,EAAuB;0BAFZ,QAEY;;uEAFZ,oBAEY;;AAErB,QAAI,OAAO,SAAP,IAAoB,QAApB,EAA8B;AAChC,YAAM,MAAM,0CAAN,CAAN,CADgC;KAAlC;;AAIA,UAAK,KAAL,GAAa,SAAb,CANqB;;GAAvB;;eAFW;;0BAWL;AACJ,UAAI,QAAQ,KAAK,KAAL,CAAW,KAAX,CAAiB,GAAjB,CAAR,CADA;AAEJ,aAAO,MAAM,MAAN,CAAa,UAAC,GAAD,EAAM,CAAN;eAAY,oBAAK,CAAL,EAAQ,GAAR;OAAZ,kBAAb,CAAP,CAFI;;;;SAXK;;;AAiBE,SAAS,MAAT,CAAgB,CAAhB,EAAmB;AAChC,SAAO,IAAI,MAAJ,CAAW,CAAX,CAAP,CADgC;CAAnB","file":"Casual.js","sourcesContent":["import casualJS from 'casual'\nimport Plugin from './Plugin'\n\n// prop :: String -> Object -> Any\nimport {prop} from 'freshman'\n\nexport class Casual extends Plugin {\n\n  constructor(generator) {\n    super()\n    if (typeof generator != \"string\") {\n      throw Error(\"Type of Casual generator is not a string\")\n    }\n\n    this.value = generator\n  }\n\n  run() {\n    let paths = this.value.split('.')\n    return paths.reduce((acc, p) => prop(p, acc), casualJS)\n  }\n}\n\nexport default function casual(a) {\n  return new Casual(a);\n}\n"]}